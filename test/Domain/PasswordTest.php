<?php


namespace Test\Domain;

require './vendor/autoload.php';

use Doctrine\Instantiator\Exception\InvalidArgumentException;
use PHPUnit\Framework\TestCase;
use Src\Domain\Password;

class PasswordTest extends TestCase
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     * @dataProvider additionProvideValidPassword
     */
    public function shouldCreateValidPassword($password){


        $this->assertInstanceOf(
            Password::class,
            Password::create($password)
        );
    }


    /**
     * @test
     * @dataProvider additionProviderNotValidPassword
     */
    public function shouldNotCreateValidPassword($password){

        $this->expectException(InvalidArgumentException::class);

        Password::create($password);

    }

    /**
     * @test
     */
    public function shouldGetValidPassword(){

        $password = Password::create("A123456");

        $this->assertEquals(
            'A123456',
            $password->get()
        );

    }


    public function additionProvideValidPassword()
    {
        return [ ["A123456"],["ABCD12489546ASD4"],["ABCD124asdfds846ASD4"]];
    }

    public function additionProviderNotValidPassword(){
        return [["AS"],["1212"],["123456789101112131415161718192021232425262728"],["123456789101112131415161718192021232425262728asdkaslas]"]];
    }


}